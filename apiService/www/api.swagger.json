{
  "swagger": "2.0",
  "info": {
    "title": "protos/api/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "API"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/gmailapi/subscribe": {
      "post": {
        "summary": "SubscribeToMail call gmailapi subscribe",
        "operationId": "API_SubscribeToMail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gmailapiSubscriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gmailapiSubscriptionRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/igapi/trade": {
      "post": {
        "summary": "TradeAction set a trade on IG Broker based on action from email",
        "operationId": "API_TradeAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_igapiTradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_igapiOpenTradeRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/create": {
      "post": {
        "summary": "CreateProject creates project",
        "operationId": "API_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_projectProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_projectCreateProjectRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/get/{projectId}": {
      "get": {
        "summary": "GetProject retrives a project",
        "operationId": "API_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_projectProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list/{assignedUserId}": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/project/{projectId}/task/list/{assignedUserId}/{tagId}": {
      "get": {
        "summary": "ListTasks lists task",
        "operationId": "API_ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_taskListTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "assignedUserId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/task/create": {
      "post": {
        "summary": "CreateTask creates task",
        "operationId": "API_CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_taskTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_taskCreateTaskRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/task/update": {
      "post": {
        "summary": "UpdateTask updates task",
        "operationId": "API_UpdateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_taskTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_taskUpdateTaskRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/uibackend/getproducts": {
      "get": {
        "summary": "GetProducts retrieves all products",
        "operationId": "API_GetProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_uibackendProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "API"
        ]
      }
    },
    "/v1/uibackend/gettransactions/{productId}/{filterBy}": {
      "get": {
        "summary": "GetTransactions retrieves all products",
        "operationId": "API_GetTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_uibackendTransactionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterBy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/user/login": {
      "post": {
        "summary": "LoginUser logs in user",
        "operationId": "API_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_userLoginRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    },
    "/v1/user/register": {
      "post": {
        "summary": "RegisterUser creates user",
        "operationId": "API_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/demo_userUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/demo_userRegisterRequest"
            }
          }
        ],
        "tags": [
          "API"
        ]
      }
    }
  },
  "definitions": {
    "demo_igapiOpenTradeRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "epic": {
          "type": "string"
        },
        "buy": {
          "type": "boolean"
        }
      },
      "title": "The request containing any user identifier, the instrument to deal on and direction of trade, buy long or sell short"
    },
    "demo_igapiTradeResponse": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string"
        },
        "tradePrice": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "response containing transId and price at which the trade was executed"
    },
    "demo_projectCreateProjectRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "demo_projectProjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demo_projectTagResponse"
          }
        }
      }
    },
    "demo_projectTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        }
      }
    },
    "demo_taskCreateTaskRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        }
      }
    },
    "demo_taskListTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demo_taskTaskResponse"
          }
        }
      }
    },
    "demo_taskTaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/demo_projectProjectResponse"
        },
        "tag": {
          "$ref": "#/definitions/demo_projectTagResponse"
        },
        "assignedUser": {
          "$ref": "#/definitions/demo_userVerifyResponse"
        }
      }
    },
    "demo_taskUpdateTaskRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "tagId": {
          "type": "string"
        },
        "assignedUserId": {
          "type": "string"
        }
      }
    },
    "demo_uibackendProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "sortCode": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "currentBalance": {
          "type": "integer",
          "format": "int32"
        },
        "availableBalance": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "demo_uibackendProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demo_uibackendProduct"
          }
        }
      }
    },
    "demo_uibackendTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "type": "string"
        },
        "dateOn": {
          "type": "string"
        },
        "debitCredit": {
          "type": "string"
        },
        "transDescription": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "transactionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demo_uibackendTransactionList"
          }
        }
      }
    },
    "demo_uibackendTransactionList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "type": "string"
        },
        "dateOn": {
          "type": "string"
        },
        "debitCredit": {
          "type": "string"
        },
        "transDescription": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "demo_uibackendTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/demo_uibackendTransaction"
          }
        }
      }
    },
    "demo_userLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "demo_userRegisterRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "demo_userUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "demo_userVerifyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "gmailapiSubscriptionRequest": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        }
      },
      "title": "The request containing any user identifier, the labelname to monitor and the topicname to subscribe to"
    },
    "gmailapiSubscriptionResponse": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string"
        },
        "historyId": {
          "type": "string"
        }
      },
      "title": "response containing transId and historyid of gmail watch response"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
