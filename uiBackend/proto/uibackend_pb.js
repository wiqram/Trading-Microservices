// source: uibackend.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.demo_uibackend.Product', null, global);
goog.exportSymbol('proto.demo_uibackend.ProductsRequest', null, global);
goog.exportSymbol('proto.demo_uibackend.ProductsResponse', null, global);
goog.exportSymbol('proto.demo_uibackend.Transaction', null, global);
goog.exportSymbol('proto.demo_uibackend.TransactionList', null, global);
goog.exportSymbol('proto.demo_uibackend.TransactionsRequest', null, global);
goog.exportSymbol('proto.demo_uibackend.TransactionsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.ProductsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.demo_uibackend.ProductsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.ProductsRequest.displayName = 'proto.demo_uibackend.ProductsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.ProductsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.demo_uibackend.ProductsResponse.repeatedFields_, null);
};
goog.inherits(proto.demo_uibackend.ProductsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.ProductsResponse.displayName = 'proto.demo_uibackend.ProductsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.demo_uibackend.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.Product.displayName = 'proto.demo_uibackend.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.TransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.demo_uibackend.TransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.TransactionsRequest.displayName = 'proto.demo_uibackend.TransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.TransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.demo_uibackend.TransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.demo_uibackend.TransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.TransactionsResponse.displayName = 'proto.demo_uibackend.TransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.demo_uibackend.Transaction.repeatedFields_, null);
};
goog.inherits(proto.demo_uibackend.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.Transaction.displayName = 'proto.demo_uibackend.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.demo_uibackend.TransactionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.demo_uibackend.TransactionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.demo_uibackend.TransactionList.displayName = 'proto.demo_uibackend.TransactionList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.ProductsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.ProductsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.ProductsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.ProductsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.ProductsRequest}
 */
proto.demo_uibackend.ProductsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.ProductsRequest;
  return proto.demo_uibackend.ProductsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.ProductsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.ProductsRequest}
 */
proto.demo_uibackend.ProductsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.ProductsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.ProductsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.ProductsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.ProductsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.demo_uibackend.ProductsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.ProductsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.ProductsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.ProductsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.ProductsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.demo_uibackend.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.ProductsResponse}
 */
proto.demo_uibackend.ProductsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.ProductsResponse;
  return proto.demo_uibackend.ProductsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.ProductsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.ProductsResponse}
 */
proto.demo_uibackend.ProductsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.demo_uibackend.Product;
      reader.readMessage(value,proto.demo_uibackend.Product.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.ProductsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.ProductsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.ProductsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.ProductsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.demo_uibackend.Product.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Product products = 1;
 * @return {!Array<!proto.demo_uibackend.Product>}
 */
proto.demo_uibackend.ProductsResponse.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.demo_uibackend.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.demo_uibackend.Product, 1));
};


/**
 * @param {!Array<!proto.demo_uibackend.Product>} value
 * @return {!proto.demo_uibackend.ProductsResponse} returns this
*/
proto.demo_uibackend.ProductsResponse.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.demo_uibackend.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.demo_uibackend.Product}
 */
proto.demo_uibackend.ProductsResponse.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.demo_uibackend.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.demo_uibackend.ProductsResponse} returns this
 */
proto.demo_uibackend.ProductsResponse.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sortcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currentbalance: jspb.Message.getFieldWithDefault(msg, 6, 0),
    availablebalance: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.Product}
 */
proto.demo_uibackend.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.Product;
  return proto.demo_uibackend.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.Product}
 */
proto.demo_uibackend.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentbalance(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailablebalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSortcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrentbalance();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAvailablebalance();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.demo_uibackend.Product.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string productId = 2;
 * @return {string}
 */
proto.demo_uibackend.Product.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string productName = 3;
 * @return {string}
 */
proto.demo_uibackend.Product.prototype.getProductname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setProductname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sortCode = 4;
 * @return {string}
 */
proto.demo_uibackend.Product.prototype.getSortcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setSortcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string accountNumber = 5;
 * @return {string}
 */
proto.demo_uibackend.Product.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 currentBalance = 6;
 * @return {number}
 */
proto.demo_uibackend.Product.prototype.getCurrentbalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setCurrentbalance = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 availableBalance = 7;
 * @return {number}
 */
proto.demo_uibackend.Product.prototype.getAvailablebalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.Product} returns this
 */
proto.demo_uibackend.Product.prototype.setAvailablebalance = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.TransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.TransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.TransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filterby: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.TransactionsRequest}
 */
proto.demo_uibackend.TransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.TransactionsRequest;
  return proto.demo_uibackend.TransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.TransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.TransactionsRequest}
 */
proto.demo_uibackend.TransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterby(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.TransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.TransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.TransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilterby();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string productId = 1;
 * @return {string}
 */
proto.demo_uibackend.TransactionsRequest.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionsRequest} returns this
 */
proto.demo_uibackend.TransactionsRequest.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filterBy = 2;
 * @return {string}
 */
proto.demo_uibackend.TransactionsRequest.prototype.getFilterby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionsRequest} returns this
 */
proto.demo_uibackend.TransactionsRequest.prototype.setFilterby = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.demo_uibackend.TransactionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.TransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.TransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.TransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.demo_uibackend.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.TransactionsResponse}
 */
proto.demo_uibackend.TransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.TransactionsResponse;
  return proto.demo_uibackend.TransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.TransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.TransactionsResponse}
 */
proto.demo_uibackend.TransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.demo_uibackend.Transaction;
      reader.readMessage(value,proto.demo_uibackend.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.TransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.TransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.TransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.demo_uibackend.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction transactions = 1;
 * @return {!Array<!proto.demo_uibackend.Transaction>}
 */
proto.demo_uibackend.TransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.demo_uibackend.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.demo_uibackend.Transaction, 1));
};


/**
 * @param {!Array<!proto.demo_uibackend.Transaction>} value
 * @return {!proto.demo_uibackend.TransactionsResponse} returns this
*/
proto.demo_uibackend.TransactionsResponse.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.demo_uibackend.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.demo_uibackend.Transaction}
 */
proto.demo_uibackend.TransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.demo_uibackend.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.demo_uibackend.TransactionsResponse} returns this
 */
proto.demo_uibackend.TransactionsResponse.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.demo_uibackend.Transaction.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dateon: jspb.Message.getFieldWithDefault(msg, 3, ""),
    debitcredit: jspb.Message.getFieldWithDefault(msg, 4, ""),
    transdescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    details: jspb.Message.getFieldWithDefault(msg, 6, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    transactionlistList: jspb.Message.toObjectList(msg.getTransactionlistList(),
    proto.demo_uibackend.TransactionList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.Transaction}
 */
proto.demo_uibackend.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.Transaction;
  return proto.demo_uibackend.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.Transaction}
 */
proto.demo_uibackend.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateon(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebitcredit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransdescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 8:
      var value = new proto.demo_uibackend.TransactionList;
      reader.readMessage(value,proto.demo_uibackend.TransactionList.deserializeBinaryFromReader);
      msg.addTransactionlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDateon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDebitcredit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTransdescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTransactionlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.demo_uibackend.TransactionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.demo_uibackend.Transaction.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string productId = 2;
 * @return {string}
 */
proto.demo_uibackend.Transaction.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dateOn = 3;
 * @return {string}
 */
proto.demo_uibackend.Transaction.prototype.getDateon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setDateon = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string debitCredit = 4;
 * @return {string}
 */
proto.demo_uibackend.Transaction.prototype.getDebitcredit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setDebitcredit = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string transDescription = 5;
 * @return {string}
 */
proto.demo_uibackend.Transaction.prototype.getTransdescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setTransdescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string details = 6;
 * @return {string}
 */
proto.demo_uibackend.Transaction.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 amount = 7;
 * @return {number}
 */
proto.demo_uibackend.Transaction.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated TransactionList transactionList = 8;
 * @return {!Array<!proto.demo_uibackend.TransactionList>}
 */
proto.demo_uibackend.Transaction.prototype.getTransactionlistList = function() {
  return /** @type{!Array<!proto.demo_uibackend.TransactionList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.demo_uibackend.TransactionList, 8));
};


/**
 * @param {!Array<!proto.demo_uibackend.TransactionList>} value
 * @return {!proto.demo_uibackend.Transaction} returns this
*/
proto.demo_uibackend.Transaction.prototype.setTransactionlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.demo_uibackend.TransactionList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.demo_uibackend.TransactionList}
 */
proto.demo_uibackend.Transaction.prototype.addTransactionlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.demo_uibackend.TransactionList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.demo_uibackend.Transaction} returns this
 */
proto.demo_uibackend.Transaction.prototype.clearTransactionlistList = function() {
  return this.setTransactionlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.demo_uibackend.TransactionList.prototype.toObject = function(opt_includeInstance) {
  return proto.demo_uibackend.TransactionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.demo_uibackend.TransactionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dateon: jspb.Message.getFieldWithDefault(msg, 3, ""),
    debitcredit: jspb.Message.getFieldWithDefault(msg, 4, ""),
    transdescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    details: jspb.Message.getFieldWithDefault(msg, 6, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.demo_uibackend.TransactionList}
 */
proto.demo_uibackend.TransactionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.demo_uibackend.TransactionList;
  return proto.demo_uibackend.TransactionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.demo_uibackend.TransactionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.demo_uibackend.TransactionList}
 */
proto.demo_uibackend.TransactionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateon(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebitcredit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransdescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.demo_uibackend.TransactionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.demo_uibackend.TransactionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.demo_uibackend.TransactionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.demo_uibackend.TransactionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDateon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDebitcredit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTransdescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.demo_uibackend.TransactionList.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string productId = 2;
 * @return {string}
 */
proto.demo_uibackend.TransactionList.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dateOn = 3;
 * @return {string}
 */
proto.demo_uibackend.TransactionList.prototype.getDateon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setDateon = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string debitCredit = 4;
 * @return {string}
 */
proto.demo_uibackend.TransactionList.prototype.getDebitcredit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setDebitcredit = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string transDescription = 5;
 * @return {string}
 */
proto.demo_uibackend.TransactionList.prototype.getTransdescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setTransdescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string details = 6;
 * @return {string}
 */
proto.demo_uibackend.TransactionList.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 amount = 7;
 * @return {number}
 */
proto.demo_uibackend.TransactionList.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.demo_uibackend.TransactionList} returns this
 */
proto.demo_uibackend.TransactionList.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


goog.object.extend(exports, proto.demo_uibackend);
